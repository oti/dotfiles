# main viewの左端にコミットIDを表示する
set main-view = id date author commit-title:graph=yes,refs=yes

# 空白無視 (status-view では表示するが diff-view では無視する) (W でトグル)
set ignore-space = at-eol

# 検索時に大文字小文字を無視する (default: false)
set ignore-case = true

# マージ diff を表示する
set diff-options = -m --first-parent

# リフレッシュするタイミング
set refresh-mode = auto

# 差分表示に diff-highlight を使う (要 tig 2.2.1 以降. diff-highlight が $PATH にあること)
set diff-highlight = true

# デフォルトの bind generic G !git gc を無効化する
bind generic G none

# g をファイル先頭に移動に変更、 view-grep を再割当て
bind generic g      move-first-line
bind generic E      view-grep

# F で fetch (default: :toggle file-name / :toggle commit-title-refs)
bind generic F      ?git fetch %(remote)
bind main    F      ?git fetch %(remote)

# U で pull
bind generic U      ?git pull %(remote) --prune

# P で remote への push
bind generic P      ?git push -u %(remote) %(repo:head)

# + で commit --amend
bind generic +      !git commit --amend --allow-empty

# L で reflog
bind generic L      !sh -c "git reflog --pretty=raw | tig --pretty=raw"

# _ で指定 reflog 番号にリセット
bind generic _      ?git reset --hard HEAD@{"%(prompt Enter HEAD@{} number: )"}

# ^ で reset --soft
bind generic ^      ?git reset --soft HEAD^

# . で HEAD との diff
bind main    .      !sh -c "git diff %(commit) | tig"
bind diff    .      !sh -c "git diff %(commit) | tig"
bind refs    .      !sh -c "git diff %(branch) | tig"

# Alt-. で指定 commit ID との diff
bind main    <Esc>. ?sh -c "git diff %(commit)..%(prompt Enter commit ID: ) | tig"
bind diff    <Esc>. ?sh -c "git diff %(commit)..%(prompt Enter commit ID: ) | tig"
bind refs    <Esc>. ?sh -c "git diff %(branch)..%(prompt Enter branch name: ) | tig"

# S で stash
bind generic S      ?git stash

# Y で stash pop
bind diff    Y      ?git stash pop %(stash)
bind stash   Y      ?git stash pop %(stash)

# H で reset --hard
bind main    H      ?git reset --hard %(commit)
bind diff    H      ?git reset --hard %(commit)
bind refs    H      ?git reset --hard %(branch)

# H で reset --hard HEAD (status-view)
bind status  H      ?git reset --hard HEAD

# D でブランチを削除 (マージ済みブランチのみ. 強制削除(branch -D) は `!`) (refs-view)
bind refs    D      ?git branch -d %(branch)

# D でトラッキングされていないファイルを削除 (status-view)
bind status  D      ?git clean -d -f -- %(file)

# D で stash を削除 (`!` と同じ) (stash-view)
bind stash   D      ?git stash drop %(stash)

# D でファイルを削除 (tree-view)
bind tree    D      ?git rm %(file)

# x でトラッキングされていないファイルをすべて削除
bind main    x      ?git clean -d -f
bind status  x      ?git clean -d -f

# ` で commit ID をクリップボードにコピー (Mac用)
bind generic `      @bash -c "echo -n '%(commit)' | pbcopy"

# ! で revert
bind main    !      ?git revert %(commit)

# K で cherry-pick (default: 'C')
bind main    K      ?git cherry-pick %(commit)
bind diff    K      ?git cherry-pick %(commit)

## 以下、Shift付きでブランチ指定、Alt付きでコミットID指定のコマンド

# = で restore / switch
bind main    =      ?git restore %(commit)
bind refs    =      ?git switch %(branch)

# - で直前のブランチに戻る (switch -)
bind generic -      ?git switch -

# T で tag
bind main    T ?git tag "%(prompt Enter tag name: )" %(commit)
bind refs    T ?git tag "%(prompt Enter tag name: )" %(branch)

# B でブランチを作成してそのブランチに移動 (switch -c)
bind main    B      ?git switch -c "%(prompt Enter branch name: )"
bind refs    B      ?git switch -c "%(prompt Enter branch name: )" %(branch)

# M で merge
bind main    M      ?git merge %(branch)
bind diff    M      ?git merge %(branch)
bind refs    M      ?git merge %(branch)
bind main    <Esc>m ?git merge %(commit)
bind diff    <Esc>m ?git merge %(commit)

# R で rebase
bind main    R      ?git rebase %(branch)
bind diff    R      ?git rebase %(branch)
bind refs    R      ?git rebase %(branch)
bind main    <Esc>r ?git rebase %(commit)
bind diff    <Esc>r ?git rebase %(commit)

# I で rebase -i
bind main    I      ?git rebase -i %(branch)
bind diff    I      ?git rebase -i %(branch)
bind refs    I      ?git rebase -i %(branch)
bind main    <Esc>i ?git rebase -i %(commit)
bind diff    <Esc>i ?git rebase -i %(commit)

# ; で GitHub の該当コミットを開く ※要 hub インストール
bind main    ;      @hub browse -- commit/%(commit)
bind blame   ;      @hub browse -- commit/%(commit)
bind diff    ;      @hub browse -- commit/%(commit)

# ; で GitHub の該当ページを開く
bind tree    ;      @hub browse -- blob/%(branch)/%(file)
bind blob    ;      @hub browse -- blob/%(branch)/%(file)
bind grep    ;      @hub browse -- blob/%(branch)/%(file)

# Alt-; で GitHub の指定ブランチの該当ページを開く
bind tree    <Esc>; @hub browse -- blob/"%(prompt Enter branch name: )"/%(file)
bind blob    <Esc>; @hub browse -- blob/"%(prompt Enter branch name: )"/%(file)
bind grep    <Esc>; @hub browse -- blob/"%(prompt Enter branch name: )"/%(file)

# w で GitHub の該当ブランチの Pull Request 作成ページを開く ※要 hub インストール
bind main    w      @hub browse -- compare/%(branch)?expand=1
bind diff    w      @hub browse -- compare/%(branch)?expand=1
bind refs    w      @hub browse -- compare/%(branch)?expand=1
